generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model billing {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  billing_number String   @db.VarChar(255)
  total_amount   Int?
  gst_amount     Int?
  net_amount     Int?
  payment_method String?  @db.VarChar(255)
  order_id       String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  order          order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String       @db.VarChar(255)
  description   String?      @db.VarChar(255)
  price         Int?
  category      String?      @db.VarChar(255)
  restaurant_id String       @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @default(now()) @db.Timestamp(6)
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item    order_item[]
}

model order {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_number  String       @db.VarChar(255)
  total_amount  Int?
  gst_amount    Int?
  net_amount    Int?
  restaurant_id String       @db.Uuid
  user_id       String       @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @default(now()) @db.Timestamp(6)
  billing       billing[]
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item    order_item[]
}

model order_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity   Int?
  price      Int?
  gst_amount Int?
  net_amount Int?
  order_id   String   @db.Uuid
  menu_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menu       menu     @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?  @db.VarChar(255)
  address        String?  @db.VarChar(255)
  contact_number String?  @db.VarChar(15)
  gst_number     String?  @db.VarChar(15)
  name           String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user_id        String   @db.Uuid
  tenant_id      String   @db.VarChar(255)
  menu           menu[]
  order          order[]
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  order       order[]
  restaurant  restaurant[]
}
